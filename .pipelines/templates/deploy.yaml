parameters:
- name: serviceConnectionName
  type: string
- name: environmentName
  type: string
- name: resourceGroupName
  type: string
- name: appServiceNames
  type: object
  default: []

stages:
 - stage: Deploy
   displayName: Deploy

   jobs:
   - job: Deploy
     displayName: Deploy
     variables: 
       infraTemplate: $(Pipeline.Workspace)/infrastructure/main.json
       parameterFile: '@$(Pipeline.Workspace)/infrastructure/parameters/${{ parameters.environmentName }}/parameters.json'
     steps:
     - download: current
       artifact: infrastructure
       displayName: Download Infrastructure
     - download: current
       artifact: functionapp
       displayName: Download Function App
     - script: |
         REGIONS=$(jq -r .parameters.regions.value $(Pipeline.Workspace)/infrastructure/parameters/${{ parameters.environmentName }}/parameters.json)
         echo $REGIONS
         echo "##vso[task.setvariable variable=REGIONS]$REGIONS"
     - ${{ each appServiceName in parameters.appServiceNames }}:
      # Deploy function app
       - task: AzureCLI@2
         displayName: Deploy Function to ${{ appServiceName }}
         inputs:
           azureSubscription: ${{ parameters.serviceConnectionName }}
           scriptType: bash
           scriptLocation: inlineScript
           inlineScript: |
             az functionapp deployment source config-zip -g ${{ parameters.resourceGroupName }} -n ${{ appServiceName }} --src $(Pipeline.Workspace)/functionapp/functionapp.zip
